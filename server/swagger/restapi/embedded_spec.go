// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "to do list API",
    "title": "TO DO LIST API",
    "version": "1.0.0"
  },
  "host": "198.1.1.26:8888",
  "basePath": "/api",
  "paths": {
    "/to-do-list": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "summary": "get all to do list",
        "operationId": "GetAllToDoList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/GetToDoListRespone"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "post": {
        "tags": [
          "ToDoList"
        ],
        "summary": "create to do list",
        "operationId": "CreateToDoList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateToDoListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "delete": {
        "tags": [
          "ToDoList"
        ],
        "summary": "delete to do list",
        "operationId": "DeleteToDoLists",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete OK"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      },
      "patch": {
        "tags": [
          "ToDoList"
        ],
        "summary": "update status of to do list",
        "operationId": "UpdateStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "ID": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status is updated"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateToDoListRequest": {
      "properties": {
        "title": {
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "錯誤訊息",
      "type": "object",
      "properties": {
        "code": {
          "description": "描述\n* 'MISSING ${Field} IN REQUEST' - 缺少條件 ${Field}\n",
          "type": "string",
          "enum": [
            "MISSING ${Field} IN REQUEST"
          ]
        },
        "details": {
          "description": "補充",
          "type": "string",
          "example": "Factory"
        }
      }
    },
    "GetToDoListRespone": {
      "type": "array",
      "items": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "Doing",
              "Finished"
            ]
          },
          "title": {
            "type": "string"
          }
        }
      }
    }
  },
  "responses": {
    "Error": {
      "description": "Unexpected error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "tags": [
    {
      "name": "ToDoList"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "to do list API",
    "title": "TO DO LIST API",
    "version": "1.0.0"
  },
  "host": "198.1.1.26:8888",
  "basePath": "/api",
  "paths": {
    "/to-do-list": {
      "get": {
        "tags": [
          "ToDoList"
        ],
        "summary": "get all to do list",
        "operationId": "GetAllToDoList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/GetToDoListRespone"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ToDoList"
        ],
        "summary": "create to do list",
        "operationId": "CreateToDoList",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateToDoListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ToDoList"
        ],
        "summary": "delete to do list",
        "operationId": "DeleteToDoLists",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete OK"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ToDoList"
        ],
        "summary": "update status of to do list",
        "operationId": "UpdateStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "ID": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status is updated"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateToDoListRequest": {
      "properties": {
        "title": {
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "錯誤訊息",
      "type": "object",
      "properties": {
        "code": {
          "description": "描述\n* 'MISSING ${Field} IN REQUEST' - 缺少條件 ${Field}\n",
          "type": "string",
          "enum": [
            "MISSING ${Field} IN REQUEST"
          ]
        },
        "details": {
          "description": "補充",
          "type": "string",
          "example": "Factory"
        }
      }
    },
    "GetToDoListRespone": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GetToDoListResponeItems0"
      }
    },
    "GetToDoListResponeItems0": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "Doing",
            "Finished"
          ]
        },
        "title": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "Error": {
      "description": "Unexpected error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "tags": [
    {
      "name": "ToDoList"
    }
  ]
}`))
}
